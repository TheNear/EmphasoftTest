[{"C:\\Develop\\Projects\\emphasofttest\\src\\GlobalStyle.ts":"1","C:\\Develop\\Projects\\emphasofttest\\src\\redux\\store.ts":"2","C:\\Develop\\Projects\\emphasofttest\\src\\pages\\UsersPage\\UsersPage.tsx":"3","C:\\Develop\\Projects\\emphasofttest\\src\\redux\\usersFilter\\reducer.ts":"4","C:\\Develop\\Projects\\emphasofttest\\src\\redux\\users\\types.ts":"5","C:\\Develop\\Projects\\emphasofttest\\src\\redux\\users\\actions.ts":"6","C:\\Develop\\Projects\\emphasofttest\\src\\redux\\usersFilter\\types.ts":"7","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserFilter\\UserFilterStyle.ts":"8","C:\\Develop\\Projects\\emphasofttest\\src\\hooks\\useDebounce.ts":"9","C:\\Develop\\Projects\\emphasofttest\\src\\assets\\js\\formatData.ts":"10","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserList\\UserList.tsx":"11","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserSortButton\\UserSortButtonStyle.ts":"12","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserList\\UserListStyle.ts":"13","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserSortButton\\UserSortButton.tsx":"14","C:\\Develop\\Projects\\emphasofttest\\src\\App.tsx":"15","C:\\Develop\\Projects\\emphasofttest\\src\\components\\AuthForm\\AuthForm.tsx":"16","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserFilter\\UserFilter.tsx":"17","C:\\Develop\\Projects\\emphasofttest\\src\\styles\\CommonStyles.ts":"18","C:\\Develop\\Projects\\emphasofttest\\src\\hooks\\useForm.ts":"19"},{"size":671,"mtime":1606639796397,"results":"20","hashOfConfig":"21"},{"size":442,"mtime":1606639796415,"results":"22","hashOfConfig":"21"},{"size":374,"mtime":1606639796411,"results":"23","hashOfConfig":"21"},{"size":508,"mtime":1606639796420,"results":"24","hashOfConfig":"21"},{"size":655,"mtime":1606639796418,"results":"25","hashOfConfig":"21"},{"size":566,"mtime":1606639796416,"results":"26","hashOfConfig":"21"},{"size":501,"mtime":1606639796420,"results":"27","hashOfConfig":"21"},{"size":1001,"mtime":1606647700130,"results":"28","hashOfConfig":"21"},{"size":429,"mtime":1606639796407,"results":"29","hashOfConfig":"21"},{"size":434,"mtime":1606639796399,"results":"30","hashOfConfig":"21"},{"size":2117,"mtime":1606646687565,"results":"31","hashOfConfig":"21"},{"size":1866,"mtime":1606645008866,"results":"32","hashOfConfig":"21"},{"size":771,"mtime":1606646314161,"results":"33","hashOfConfig":"21"},{"size":1345,"mtime":1606644770656,"results":"34","hashOfConfig":"21"},{"size":270,"mtime":1606645146876,"results":"35","hashOfConfig":"21"},{"size":453,"mtime":1606639796401,"results":"36","hashOfConfig":"21"},{"size":1780,"mtime":1606647456759,"results":"37","hashOfConfig":"21"},{"size":749,"mtime":1606646482584,"results":"38","hashOfConfig":"21"},{"size":882,"mtime":1606647083920,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f53iiq",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"C:\\Develop\\Projects\\emphasofttest\\src\\GlobalStyle.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\redux\\store.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\pages\\UsersPage\\UsersPage.tsx",[],["82","83","84","85","86","87"],"C:\\Develop\\Projects\\emphasofttest\\src\\redux\\usersFilter\\reducer.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\redux\\users\\types.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\redux\\users\\actions.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\redux\\usersFilter\\types.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserFilter\\UserFilterStyle.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\hooks\\useDebounce.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\assets\\js\\formatData.ts",["88"],"C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserList\\UserList.tsx",["89","90"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserListTable, UserListTableCell, UserListWrapper, UserTableHead } from \"./UserListStyle\";\nimport { IUsersResponse } from \"../../types/api\";\nimport { getFormatedDate } from \"../../assets/js/formatData\";\nimport { fetchUsers } from \"../../redux/users/actions\";\nimport { getSortedUsers } from \"../../redux/users/selectors\";\nimport { UserSortButton } from \"../UserSortButton/UserSortButton\";\nimport { PossibleSortTypes } from \"../../redux/users/types\";\n\n// TODO: Добавить какой-нибудь интерфейс Суперюзеру и активному юзеру\nconst UserList: React.FC = () => {\n  const dispatch = useDispatch();\n  const usersData = useSelector(getSortedUsers);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  return (\n    <UserListWrapper title=\"USER LIST\">\n      <UserListTable>\n        <UserTableHead>\n          <tr>\n            <UserListTableCell width=\"7rem\" textAlign=\"center\">\n              <UserSortButton sortType={PossibleSortTypes.BY_ID}>id</UserSortButton>\n            </UserListTableCell>\n            <UserListTableCell>username</UserListTableCell>\n            <UserListTableCell>firstname</UserListTableCell>\n            <UserListTableCell>lastname</UserListTableCell>\n            <UserListTableCell textAlign=\"right\">last online</UserListTableCell>\n          </tr>\n        </UserTableHead>\n        <tbody>\n          {usersData.map((user: IUsersResponse) => (\n            <tr key={user.id}>\n              <UserListTableCell textAlign=\"center\">{user.id}</UserListTableCell>\n              <UserListTableCell>{user.username}</UserListTableCell>\n              <UserListTableCell>{user.first_name}</UserListTableCell>\n              <UserListTableCell>{user.last_name}</UserListTableCell>\n              <UserListTableCell textAlign=\"right\">\n                {getFormatedDate(user.last_login)}\n              </UserListTableCell>\n            </tr>\n          ))}\n        </tbody>\n      </UserListTable>\n    </UserListWrapper>\n  );\n};\n\nexport { UserList };\n","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserSortButton\\UserSortButtonStyle.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserList\\UserListStyle.ts",["91"],"import styled from \"styled-components\";\nimport { CommonContainer, commonContainerStyle } from \"../../styles/CommonStyles\";\n\nexport const UserListWrapper = styled(CommonContainer)`\n  width: 100%;\n`;\n\nexport const UserListTable = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n  font-size: 1.3rem;\n`;\n\nexport const UserTableHead = styled.thead`\n  font-weight: 700;\n  text-transform: uppercase;\n`;\n\ninterface UserListTableCellProps {\n  textAlign?: \"left\" | \"right\" | \"center\";\n  width?: string;\n}\n\nexport const UserListTableCell = styled.td<UserListTableCellProps>`\n  padding: 1rem;\n  text-align: ${({ textAlign }) => textAlign || \"left\"};\n  border-bottom: 1px solid ${({ theme }) => theme.inactiveColor};\n  ${({ width }) => (width ? `width: ${width}` : \"\")};\n`;\n","C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserSortButton\\UserSortButton.tsx",[],"C:\\Develop\\Projects\\emphasofttest\\src\\App.tsx",[],"C:\\Develop\\Projects\\emphasofttest\\src\\components\\AuthForm\\AuthForm.tsx",[],"C:\\Develop\\Projects\\emphasofttest\\src\\components\\UserFilter\\UserFilter.tsx",["92","93","94"],"C:\\Develop\\Projects\\emphasofttest\\src\\styles\\CommonStyles.ts",[],"C:\\Develop\\Projects\\emphasofttest\\src\\hooks\\useForm.ts",["95"],"import { ChangeEvent, useState } from \"react\";\nimport { KeyStringInterface } from \"../types/common\";\n\n// FIXME : Исправить типизацию\n\nexport interface UseFormReturn<T> {\n  values: T;\n  errors: KeyStringInterface;\n  changeHandler: (evt: ChangeEvent<HTMLInputElement>) => void;\n  resetValues: () => void;\n}\n\nexport const useForm = <T extends KeyStringInterface = KeyStringInterface>(): UseFormReturn<T> => {\n  const [values, setValues] = useState<T>({} as T);\n  const [errors, setErrors] = useState<KeyStringInterface>({});\n\n  const changeHandler = (evt: ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    } as T);\n  };\n\n  const resetValues = () => {\n    setValues({} as T);\n  };\n\n  // const submitHandler = () => {\n  // };\n\n  return {\n    values,\n    errors,\n    changeHandler,\n    resetValues,\n  };\n};\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":1,"column":10,"nodeType":"110","messageId":"111","endLine":1,"endColumn":24},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"113","line":10,"column":10,"nodeType":"110","messageId":"111","endLine":10,"endColumn":21},{"ruleId":"108","severity":1,"message":"114","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":47},{"ruleId":"108","severity":1,"message":"112","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":28},{"ruleId":"108","severity":1,"message":"115","line":1,"column":41,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"113","line":5,"column":29,"nodeType":"110","messageId":"111","endLine":5,"endColumn":40},{"ruleId":"108","severity":1,"message":"116","line":15,"column":18,"nodeType":"110","messageId":"111","endLine":15,"endColumn":27},"lines-around-directive",["117"],"no-spaced-func",["118"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'IUsersResponse' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'resetFilter' is defined but never used.","'commonContainerStyle' is defined but never used.","'useState' is defined but never used.","'setErrors' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]