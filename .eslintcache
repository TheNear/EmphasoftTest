[{"d:\\work\\projects\\EmphasoftTest\\src\\GlobalStyle.ts":"1","d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthForm\\AuthForm.tsx":"2","d:\\work\\projects\\EmphasoftTest\\src\\redux\\auth\\reducer.ts":"3","d:\\work\\projects\\EmphasoftTest\\src\\App.tsx":"4","d:\\work\\projects\\EmphasoftTest\\src\\styles\\FormStyle.ts":"5","d:\\work\\projects\\EmphasoftTest\\src\\styles\\ButtonStyle.ts":"6","d:\\work\\projects\\EmphasoftTest\\src\\pages\\AuthPage\\AuthPageStyle.ts":"7","d:\\work\\projects\\EmphasoftTest\\src\\pages\\AuthPage\\AuthPage.tsx":"8","d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthForm\\AuthFormStyle.ts":"9","d:\\work\\projects\\EmphasoftTest\\src\\index.tsx":"10","d:\\work\\projects\\EmphasoftTest\\src\\redux\\rootReducer.ts":"11","d:\\work\\projects\\EmphasoftTest\\src\\redux\\store.ts":"12","d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthLoginForm\\AuthLoginForm.tsx":"13","d:\\work\\projects\\EmphasoftTest\\src\\hooks\\useForm.ts":"14","d:\\work\\projects\\EmphasoftTest\\src\\components\\UserList\\UserList.tsx":"15","d:\\work\\projects\\EmphasoftTest\\src\\styles\\CommonStyles.ts":"16","d:\\work\\projects\\EmphasoftTest\\src\\components\\UserList\\UserListStyle.ts":"17","d:\\work\\projects\\EmphasoftTest\\src\\pages\\UsersPage\\UserPageStyle.ts":"18","d:\\work\\projects\\EmphasoftTest\\src\\assets\\js\\formatData.ts":"19","d:\\work\\projects\\EmphasoftTest\\src\\pages\\UsersPage\\UsersPage.tsx":"20","d:\\work\\projects\\EmphasoftTest\\src\\components\\UserFilter\\UserFilter.tsx":"21","d:\\work\\projects\\EmphasoftTest\\src\\components\\UserFilter\\UserFilterStyle.ts":"22","d:\\work\\projects\\EmphasoftTest\\src\\redux\\rootSaga.ts":"23","d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\types.ts":"24","d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\actions.ts":"25","d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\reducer.ts":"26","d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\reducer.ts":"27","d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\selectors.ts":"28","d:\\work\\projects\\EmphasoftTest\\src\\assets\\js\\constants.ts":"29","d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\actions.ts":"30","d:\\work\\projects\\EmphasoftTest\\src\\hooks\\useDebounce.ts":"31","d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\types.ts":"32"},{"size":671,"mtime":1606573380749,"results":"33","hashOfConfig":"34"},{"size":453,"mtime":1606464470005,"results":"35","hashOfConfig":"34"},{"size":289,"mtime":1606572232220,"results":"36","hashOfConfig":"34"},{"size":270,"mtime":1606574660776,"results":"37","hashOfConfig":"34"},{"size":918,"mtime":1606466332984,"results":"38","hashOfConfig":"34"},{"size":385,"mtime":1606463233390,"results":"39","hashOfConfig":"34"},{"size":323,"mtime":1606463253290,"results":"40","hashOfConfig":"34"},{"size":282,"mtime":1606463262443,"results":"41","hashOfConfig":"34"},{"size":616,"mtime":1606573644987,"results":"42","hashOfConfig":"34"},{"size":685,"mtime":1606463411558,"results":"43","hashOfConfig":"34"},{"size":337,"mtime":1606584423657,"results":"44","hashOfConfig":"34"},{"size":395,"mtime":1606582006406,"results":"45","hashOfConfig":"34"},{"size":1059,"mtime":1606465785977,"results":"46","hashOfConfig":"34"},{"size":778,"mtime":1606594197198,"results":"47","hashOfConfig":"34"},{"size":1996,"mtime":1606595670531,"results":"48","hashOfConfig":"34"},{"size":297,"mtime":1606574256268,"results":"49","hashOfConfig":"34"},{"size":696,"mtime":1606580891374,"results":"50","hashOfConfig":"34"},{"size":267,"mtime":1606580886189,"results":"51","hashOfConfig":"34"},{"size":434,"mtime":1606579255048,"results":"52","hashOfConfig":"34"},{"size":374,"mtime":1606580827457,"results":"53","hashOfConfig":"34"},{"size":1547,"mtime":1606594863080,"results":"54","hashOfConfig":"34"},{"size":253,"mtime":1606594840523,"results":"55","hashOfConfig":"34"},{"size":207,"mtime":1606582033351,"results":"56","hashOfConfig":"34"},{"size":655,"mtime":1606595303580,"results":"57","hashOfConfig":"34"},{"size":566,"mtime":1606595318402,"results":"58","hashOfConfig":"34"},{"size":860,"mtime":1606595858219,"results":"59","hashOfConfig":"34"},{"size":508,"mtime":1606584400889,"results":"60","hashOfConfig":"34"},{"size":1178,"mtime":1606594073777,"results":"61","hashOfConfig":"34"},{"size":153,"mtime":1606591581127,"results":"62","hashOfConfig":"34"},{"size":301,"mtime":1606583958801,"results":"63","hashOfConfig":"34"},{"size":429,"mtime":1606591608199,"results":"64","hashOfConfig":"34"},{"size":501,"mtime":1606594168754,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q08xoo",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d:\\work\\projects\\EmphasoftTest\\src\\GlobalStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthForm\\AuthForm.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\auth\\reducer.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\App.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\styles\\FormStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\styles\\ButtonStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\pages\\AuthPage\\AuthPageStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\pages\\AuthPage\\AuthPage.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthForm\\AuthFormStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\index.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\rootReducer.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\store.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\components\\AuthLoginForm\\AuthLoginForm.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\hooks\\useForm.ts",["133"],"import { ChangeEvent, useState } from \"react\";\nimport { KeyStringInterface } from \"../types/common\";\n\n// FIXME : Исправить типизацию\n\nexport interface UseFormReturn<T> {\n  values: T;\n  errors: KeyStringInterface;\n  changeHandler: (evt: ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const useForm = <T extends KeyStringInterface = KeyStringInterface>(): UseFormReturn<T> => {\n  const [values, setValues] = useState<T>({} as T);\n  const [errors, setErrors] = useState<KeyStringInterface>({});\n\n  const changeHandler = (evt: ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    } as T);\n  };\n\n  // const submitHandler = () => {\n  // };\n\n  return {\n    values,\n    errors,\n    changeHandler,\n  };\n};\n","d:\\work\\projects\\EmphasoftTest\\src\\components\\UserList\\UserList.tsx",["134"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { UserListTable, UserListTableCell, UserListWrapper, UserTableHead } from \"./UserListStyle\";\n// import usersData from \"../../mock/users.json\";\nimport { IUsersResponse } from \"../../types/api\";\nimport { getFormatedDate } from \"../../assets/js/formatData\";\nimport { changeSortDirection, fetchUsers } from \"../../redux/users/actions\";\nimport { RootState } from \"../../types/redux\";\nimport { getSortedUsers } from \"../../redux/users/selectors\";\n\n// TODO: Добавить какой-нибудь интерфейс Суперюзеру и активному юзеру\nconst UserList: React.FC = () => {\n  const dispatch = useDispatch();\n  const usersData = useSelector(getSortedUsers);\n  useEffect(() => {\n    dispatch(fetchUsers());\n  }, [dispatch]);\n\n  return (\n    <UserListWrapper>\n      <UserListTable>\n        <UserTableHead>\n          <tr>\n            <UserListTableCell onClick={() => dispatch(changeSortDirection())} textAlign=\"center\">id</UserListTableCell>\n            <UserListTableCell>nickname</UserListTableCell>\n            <UserListTableCell>firstname</UserListTableCell>\n            <UserListTableCell>lastname</UserListTableCell>\n            <UserListTableCell textAlign=\"right\">last online</UserListTableCell>\n          </tr>\n        </UserTableHead>\n        <tbody>\n          {usersData.map((user: IUsersResponse) => (\n            <tr key={user.id}>\n              <UserListTableCell textAlign=\"center\">{user.id}</UserListTableCell>\n              <UserListTableCell>{user.username}</UserListTableCell>\n              <UserListTableCell>{user.first_name}</UserListTableCell>\n              <UserListTableCell>{user.last_name}</UserListTableCell>\n              <UserListTableCell textAlign=\"right\">{getFormatedDate(user.last_login)}</UserListTableCell>\n            </tr>\n          ))}\n        </tbody>\n      </UserListTable>\n    </UserListWrapper>\n  );\n};\n\nexport { UserList };\n","d:\\work\\projects\\EmphasoftTest\\src\\styles\\CommonStyles.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\components\\UserList\\UserListStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\pages\\UsersPage\\UserPageStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\assets\\js\\formatData.ts",["135"],"import { IUsersResponse } from \"../../types/api\";\n\nexport const getFormatedDate = (date: string): string => {\n  const dateObj = new Date(date);\n  const option: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\",\n    hour12: false,\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n  };\n  const dateStr = dateObj.toLocaleDateString(\"ru-RU\", option);\n  return `${dateStr}`;\n};\n","d:\\work\\projects\\EmphasoftTest\\src\\pages\\UsersPage\\UsersPage.tsx",[],"d:\\work\\projects\\EmphasoftTest\\src\\components\\UserFilter\\UserFilter.tsx",["136"],"d:\\work\\projects\\EmphasoftTest\\src\\components\\UserFilter\\UserFilterStyle.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\rootSaga.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\types.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\actions.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\reducer.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\reducer.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\users\\selectors.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\assets\\js\\constants.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\actions.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\hooks\\useDebounce.ts",[],"d:\\work\\projects\\EmphasoftTest\\src\\redux\\usersFilter\\types.ts",[],{"ruleId":"137","severity":1,"message":"138","line":14,"column":18,"nodeType":"139","messageId":"140","endLine":14,"endColumn":27},{"ruleId":"137","severity":1,"message":"141","line":8,"column":10,"nodeType":"139","messageId":"140","endLine":8,"endColumn":19},{"ruleId":"137","severity":1,"message":"142","line":1,"column":10,"nodeType":"139","messageId":"140","endLine":1,"endColumn":24},{"ruleId":"137","severity":1,"message":"143","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},"@typescript-eslint/no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","'RootState' is defined but never used.","'IUsersResponse' is defined but never used.","'useState' is defined but never used."]